import logging
import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CallbackQueryHandler, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = '8122607442:AAHdSnMj1ONIWEk8qTOdj4pE2hHAbvjQ47M'
CHANNEL_ID = '@qulager_director'

logging.basicConfig(level=logging.INFO)

# –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è PORT
print(f"PORT = {os.getenv('PORT')}")

async def publish_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.type != "private":
        await update.message.reply_text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ.")
        return

    if context.args:
        task_text = ' '.join(context.args)
    else:
        await update.message.reply_text("–£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /publish –°–¥–µ–ª–∞—Ç—å –æ—Ç—á—ë—Ç")
        return

    keyboard = [[InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–∏—Ç—å", callback_data='execute_task')]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=CHANNEL_ID,
        text=f"üìù *–ó–∞–¥–∞–Ω–∏–µ:*\n{task_text}",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = query.from_user.full_name

    await query.answer("–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
    await context.bot.send_message(
        chat_id=CHANNEL_ID,
        text=f"‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: *{user}*",
        parse_mode='Markdown'
    )
    await query.edit_message_reply_markup(reply_markup=None)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("publish", publish_task))
    app.add_handler(CallbackQueryHandler(button_handler))
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
